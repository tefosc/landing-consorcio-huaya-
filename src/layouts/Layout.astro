---
export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="Consorcio Ejecutor Huaya - Empresa líder en construcción en la región Amazonas"
    />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <slot />
    <script is:inline>
      // Theme toggle functionality
      const getThemePreference = () => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
      };

      const isDark = getThemePreference() === "dark";
      document.documentElement.setAttribute(
        "data-theme",
        isDark ? "dark" : "light"
      );

      if (typeof localStorage !== "undefined") {
        localStorage.setItem("theme", isDark ? "dark" : "light");
      }

      // Intersection Observer for animations
      const observerOptions = {
        threshold: 0.1,
        rootMargin: "0px 0px -50px 0px",
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("animate-in");
          }
        });
      }, observerOptions);

      document.addEventListener("DOMContentLoaded", () => {
        const animatedElements =
          document.querySelectorAll(".animate-on-scroll");
        animatedElements.forEach((el) => observer.observe(el));
      });
    </script>
  </body>
</html>

<style is:global>
  @import "../styles/global.css";

  .animate-on-scroll {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s ease-out;
  }

  .animate-in {
    opacity: 1;
    transform: translateY(0);
  }

  .animate-fade-up {
    animation: fadeUp 0.8s ease-out forwards;
  }

  @keyframes fadeUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
